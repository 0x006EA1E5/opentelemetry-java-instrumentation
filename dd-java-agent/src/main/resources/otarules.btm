# --------------------------------------------------------
# Instrument mongo client
RULE Mongo Client instrumentation
CLASS com.mongodb.MongoClientOptions$Builder
METHOD build()
HELPER io.opentracing.contrib.agent.OpenTracingHelper
BIND
  listener:io.opentracing.contrib.mongo.TracingCommandListener =
        new io.opentracing.contrib.mongo.TracingCommandListener();
AT ENTRY
IF TRUE
DO
  $this.addCommandListener(listener);
ENDRULE

# --------------------------------------------------------


# --------------------------------------------------------
# Instrument AWS client
RULE AWS SDK Client instrumentation 1
CLASS ^com.amazonaws.client.builder.AwsClientBuilder
METHOD build()
BIND
  requestTracerHandler:io.opentracing.contrib.aws.TracingRequestHandler = new io.opentracing.contrib.aws.TracingRequestHandler();
  requests:java.util.List = new java.util.ArrayList();
AT ENTRY
IF $this.requestHandlers == null
DO
  requests.add(requestTracerHandler);
  $this.requestHandlers = requests;
ENDRULE

RULE AWS SDK Client instrumentation 2
CLASS ^com.amazonaws.client.builder.AwsClientBuilder
METHOD build()
BIND
  requestTracerHandler:io.opentracing.contrib.aws.TracingRequestHandler = new io.opentracing.contrib.aws.TracingRequestHandler();
AT ENTRY
IF $this.requestHandlers != null AND $this.requestHandlers.get(0).getClass().getCanonicalName() != "io.opentracing.contrib.aws.TracingRequestHandler"
DO
  $this.requestHandlers.add(0, requestTracerHandler);
ENDRULE
# --------------------------------------------------------



# --------------------------------------------------------
# Instrument Elasticsearch client
RULE Elasticsearch Client instrumentation 1
CLASS org.elasticsearch.client.RestClientBuilder
METHOD build()
BIND
  callback:io.opentracing.contrib.elasticsearch.TracingHttpClientConfigCallback =  new io.opentracing.contrib.elasticsearch.TracingHttpClientConfigCallback();
AT ENTRY
IF TRUE
DO
  $this.setHttpClientConfigCallback(callback);
ENDRULE


RULE Elasticsearch Client instrumentation 2
CLASS org.elasticsearch.client.transport.TransportClient
METHOD doExecute
HELPER io.opentracing.contrib.agent.OpenTracingHelper
BIND
  span:io.opentracing.Span = null;
#  decorator:io.opentracing.contrib.elasticsearch.SpanDecorator = io.opentracing.contrib.elasticsearch.SpanDecorator;
AT ENTRY
IF currentSpan() == null
DO
    span = getTracer().buildSpan($2.getClass().getSimpleName())
        .asChildOf()
        .withTag(io.opentracing.tag.Tags.SPAN_KIND.getKey(), io.opentracing.tag.Tags.SPAN_KIND_CLIENT)
        .start();
#    decorator.onRequest(span);
    $3 = new io.opentracing.contrib.elasticsearch.TracingResponseListener($3, span);
ENDRULE


RULE Elasticsearch Client instrumentation 3
CLASS org.elasticsearch.client.transport.TransportClient
METHOD doExecute
HELPER io.opentracing.contrib.agent.OpenTracingHelper
BIND
  span:io.opentracing.Span = null;
#  decorator:io.opentracing.contrib.elasticsearch.SpanDecorator = io.opentracing.contrib.elasticsearch.SpanDecorator;
AT ENTRY
IF currentSpan() != null
DO
    span = getTracer().buildSpan($2.getClass().getSimpleName())
        .asChildOf(currentSpan())
        .withTag(io.opentracing.tag.Tags.SPAN_KIND.getKey(), io.opentracing.tag.Tags.SPAN_KIND_CLIENT)
        .start();
#    decorator.onRequest(span);
    $3 = new io.opentracing.contrib.elasticsearch.TracingResponseListener($3, span);
ENDRULE
# --------------------------------------------------------

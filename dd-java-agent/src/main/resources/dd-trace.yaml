# Service name used if none is provided in the app
defaultServiceName: java-app

# The writer to use.
# Could be: LoggingWritter or DDAgentWriter (default)
writer:
  # LoggingWriter: Spans are logged using the application configuration
  # DDAgentWriter: Spans are forwarding to a Datadog Agent
  #  - Param 'host': the hostname where the DD Agent running (default: localhost)
  #  - Param 'port': the port to reach the DD Agent (default: 8126)
  type: DDAgentWriter
  host: localhost
  port: 8126

# The sampler to use.
# Could be: AllSampler (default) or RateSampler
sampler:
  # AllSampler: all spans are reported to the writer
  # RateSample: only a portion of spans are reported to the writer
  #  - Param 'rate': the portion of spans to keep
  type: AllSampler

# Decorators are used to add extra information to span
# Could be DBServiceDecorator, MapperDecorator or HTTPServiceDecorator
decorators:
  # This span decorator leverages HTTP tags such as the URL requested
  - type: HTTPServiceDecorator
    componentName: java-web-servlet
    
  # Decorator fot the HTTP client
  - type: HTTPServiceDecorator
    componentName: java-okhttp
    desiredServiceName: http-client

  # This span decorator leverages DB tags such as the statement requested
  - type: DBServiceDecorator
    componentName: java-mongo
    desiredServiceName: mongo

  # Decorator for the AWS SDK client
  - type: HTTPServiceDecorator
    componentName: java-aws-sdk
    desiredServiceName: aws-client
apply from: "${rootDir}/gradle/java.gradle"

description = 'dd-java-agent-ittests'

evaluationDependsOn(':dd-java-agent:tooling')
compileTestJava.dependsOn tasks.getByPath(':dd-java-agent:tooling:testClasses')

dependencies {
  testCompile project(':dd-trace-annotations')
  testCompile project(':dd-trace')

  testCompile deps.opentracingMock

  testCompile project(':dd-java-agent:tooling').sourceSets.test.output

  testCompile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.4.2'
  testCompile group: 'org.mongodb', name: 'mongodb-driver-async', version: '3.4.2'
  // run embeded mongodb for integration testing
  testCompile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.0.0'

  testCompile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.1.v20170120'
  testCompile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.1.v20170120'
  testCompile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '8.0.41'
  testCompile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '8.0.41'
  // note: aws transitively pulls in apache-httpclient, which we also test against:
  // testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
  testCompile(group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.119')
  testCompile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.6.0'
  testCompile(group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '3.2.0')
  testCompile(group: 'org.cassandraunit', name: 'cassandra-unit', version: '3.1.3.2') {
    exclude(module: 'netty-handler')
  }
  testCompile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
  testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'

  // JDBC tests:
  testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'
  testCompile group: 'org.hsqldb', name: 'hsqldb', version: '2.4.0'
  testCompile group: 'org.apache.derby', name: 'derby', version: '10.14.1.0'
}

test {
  jvmArgs "-Ddd.trace.configurationFile=${project.buildDir}/resources/test/dd-trace.yaml"
  jvmArgs "-Ddd.slf4j.simpleLogger.defaultLogLevel=debug"
  jvmArgs "-Dorg.slf4j.simpleLogger.defaultLogLevel=debug"
  jvmArgs "-Ddd.deps.org.jboss.byteman.verbose=true"
  jvmArgs "-Dorg.jboss.byteman.verbose=true"

  doFirst {
    // Defining here to allow jacoco to be first on the command line.
    jvmArgs "-javaagent:${project(':dd-java-agent').tasks.shadowJar.archivePath}"
  }

  testLogging {
    events "started"
  }

  if (project.hasProperty("disableShadowRelocate") && disableShadowRelocate) {
    exclude 'com/datadoghq/agent/ShadowPackageRenamingTest.class'
  }

  useJUnit {
    excludeCategories 'com.datadoghq.agent.integration.ExpensiveTest'
  }
}

task expensiveTest(type: Test) {
  jvmArgs "-Ddd.trace.configurationFile=${project.buildDir}/resources/test/dd-trace.yaml"
  jvmArgs "-Ddd.slf4j.simpleLogger.defaultLogLevel=debug"
  jvmArgs "-Dorg.slf4j.simpleLogger.defaultLogLevel=debug"
  jvmArgs "-Ddd.deps.org.jboss.byteman.verbose=true"
  jvmArgs "-Dorg.jboss.byteman.verbose=true"

  doFirst {
    // Defining here to allow jacoco to be first on the command line.
    jvmArgs "-javaagent:${project(':dd-java-agent').tasks.shadowJar.archivePath}"
  }

  testLogging {
    events "started"
  }

  if (project.hasProperty("disableShadowRelocate") && disableShadowRelocate) {
    exclude 'com/datadoghq/agent/ShadowPackageRenamingTest.class'
  }

  useJUnit {
    includeCategories 'com.datadoghq.agent.integration.ExpensiveTest'
  }
}
test.finalizedBy expensiveTest

test.dependsOn project(':dd-java-agent').shadowJar

parent.subprojects.collect { it.tasks.withType(Test) } each {
  test.shouldRunAfter it
}

// Jacoco must be applied after the test javaagent config block above,
// otherwise the javaagent args conflict. (It's order dependent and added LIFO)
apply from: "${rootDir}/gradle/jacoco.gradle"

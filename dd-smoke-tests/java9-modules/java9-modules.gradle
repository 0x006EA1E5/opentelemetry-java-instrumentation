ext {
  minJavaVersionForTests = JavaVersion.VERSION_1_9
}

apply from: "${rootDir}/gradle/java.gradle"

jar {
  manifest {
    attributes(
      'Main-Class': 'datadog.smoketest.moduleapp.ModuleApplication'
    )
  }
}

/**
 * For each Test task, creates a jlink image using the java bin directory of the test
 */
tasks.withType(Test).each {
  def javaExecutable = it.executable
  def javaVersion = getJavaExecutableVersion(javaExecutable)

  if (JavaVersion.VERSION_1_9.compareTo(javaVersion) > 0) {
    return
  }

  def jlinkExecutable = file(javaExecutable).parent + "/jlink"
  def generatedImageDir = "${buildDir}/${it.name}image"
  
  it.doFirst {
    exec {
      commandLine jlinkExecutable, '--no-man-pages', '--no-header-files',
        '--add-modules', 'java.instrument,datadog.smoketest.moduleapp',
        "--module-path", jar.archiveFile.get().toString(), "--output", generatedImageDir
    }
  }

  it.jvmArgs "-Ddatadog.smoketest.module.image=${generatedImageDir}"
  it.dependsOn jar
}

dependencies {
  testCompile project(':dd-smoke-tests')
}